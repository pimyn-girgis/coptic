#!/bin/bash

# Welcome to our environment variables.
# Please run `. ./.env_INFO` to work with the default values.
# Or create your own `.env` and source it to modify the values.
# See the documentation for each flag below.

# Most pipelines should work without even sourcing this file. Some require some
# of the helpers below. It's the publishing steps that will be affected the
# most. After all, this file was created to host secrets.
# Publishing steps won't crash, but they will be idempotent, unless the
# variables are assigned appropriately. Of course, you need a whole setup
# behind the variables, it's not simply about populating them, it's about
# populating them with things that work, such as directories that are
# configured to synchronize to the Cloud automagically, or API keys that give
# the scripts access to synchronize to the Cloud programmatically.

#################### Keys and Paths Required for Publishing ###################
# JSON_KEYFILE_NAME contains access tokens for a Google Cloud project.
# See
# https://oauth2client.readthedocs.io/en/latest/source/oauth2client.service_account.html.
# This is required for publishing content to Drive.
# You see, we export to Drive using two methods here. The first one (which is
# somewhat simple) is to set up a local directory that automatically
# synchronizes with a Drive directory every time it's updated.
# But this doesn't work when the data is, for example, a gsheet.
# In such a case, we use the Google Cloud API.
# As of today, Jul. 9th, 2024, this isn't used, but it may be used in the
# future if we support better integration with Drive, or if we stop using the
# first method as this method is cleaner.
export JSON_KEYFILE_NAME=""

# FLASHCARD_DIR is a destination directory, used to publish the final versions
# of the flashcard packages.
# You can use any directory. Personally, I am using a directory that
# automatically synchronizes with Google Drive. And I have been sharing with
# people a link to that Drive directory and the files within it.
# So copying the new files to that directory essentially publishes the new
# version of the package to whoever has the link.
# See https://www.google.com/drive/download/.
export FLASHCARD_DIR="${HOME}"

# KINDLE_DIR is the destination directory for Kindle dictionaries.
export KINDLE_DIR="${HOME}"

# BIBLE_DIR is the destination directory for the Bible EPUBs.
export BIBLE_DIR="${HOME}"

# SITE_DIR is the destination directory for the website.
export SITE_DIR="${HOME}"

#################### API Keys #################################################
# Key and secret to api.thenounproject.com.
# See https://api.thenounproject.com/documentation.html.
# These are used by the image-finding script.
export THENOUNPROJECT_KEY="d97b1b1921504edcad7af64a522674a6"
export THENOUNPROJECT_SECRET="8b1a5c554b824a9db7924c41d60eaa3d"

#################### Personal Flag Values #####################################
#
# START_AT_KEY is passed to Crum's image-finding script.
# If you use the script, this variable is a handy way to store when you last
# stopped, so the script know where to start the next time you begin collecting
# images for Crum.
export START_AT_KEY="0"

#################### Helpers and Utilities ####################################
flash () {
  open "https://metremnqymi.com/crum/${1}.html"
}

# Print the Makefile recipe without executing it.
alias makedr='make --dry-run'

# Colors are used to prettify outputs.
export RESET='\033[0m'
export BLACK='\033[0;30m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export WHITE='\033[0;37m'

color () {
  echo -e "${!1}${*:2}${RESET}"
}

grepex () {
  grep "${1}" -R . \
    --exclude-dir=.git \
    --exclude-dir=archive \
    --binary-files=without-match \
    "${@:2}"
}
