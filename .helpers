#!/bin/bash

# NOTE: These GitHub helpers work, but also consider using the `gh` CLI. See
# https://cli.github.com/.
GITHUB="https://github.com/pishoyg/coptic"
# crum opens a Crum page on ⲙⲉⲧⲣⲉⲙⲛ̀Ⲭⲏⲙⲓ.
crum () {
  for KEY in "${@}"; do
    open "https://metremnqymi.com/crum/${KEY}.html"
  done
}

# issues open issue pages in GitHub.
issues () {
  for ISSUE in "${@}"; do
    open "${GITHUB}/issues/${ISSUE}"
  done
}

# github opens the GitHub page for the project.
github () {
  open "${GITHUB}"
}

# commits opens the commits in GitHub.
commits () {
  for ISSUE in "${@}"; do
    open "${GITHUB}/commit/$(git rev-parse "${ISSUE}")"
  done
}

# Print the Makefile recipe without executing it.
alias makedr='make --dry-run'

# Colors are used to prettify outputs.
export RESET='\033[0m'
export BLACK='\033[0;30m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export WHITE='\033[0;37m'

color () {
  echo -e "${!1}${*:2}${RESET}"
}

# Find, excluding "garbage" files and directories.
findex () {
  find "${1}" \
    -not -path "./.git/*" \
    -not -path "./.git" \
    -not -name ".DS_Store" \
    -not -path "*/__pycache__/*" \
    -not -path "*/__pycache__" \
    -not -path "./coptic.egg-info/*" \
    -not -path "./coptic.egg-info" \
    -not -path "./node_modules/*" \
    -not -path "./node_modules" \
    -not -name "package-lock.json" \
    -not -name "package.json" \
    -not -name "flashcards/data/output/anki/coptic.apkg" \
    -not -name ".env" \
    -not -path "./archive/*" \
    -not -path "./archive" \
    "${@:2}"
}

# Find, excluding "garbage", and data!
findexx () {
  findex "${1}" \
    -not -path "*/data/*" \
    "${@:2}"
}

# Find files, excluding "garbage".
ffindex () {
  findex "${1}" -type f "${@:2}"
}

# Find files, excluding "garbage", and data.
ffindexx () {
  findexx "${1}" -type f "${@:2}"
}

# Grep, excluding "garbage" and binary files.
grepex () {
  ffindex "${1}" -exec grep "${@:2}" --binary-files="without-match" --color=auto --with-filename --line-number {} \;
}

# Grep, excluding "garbage", binary files, and data.
grepexx () {
  ffindexx "${1}" -exec grep "${@:2}" --binary-files="without-match" --color=auto --with-filename --line-number {} \;
}
